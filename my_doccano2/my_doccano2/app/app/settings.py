"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 2.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""
import datetime
import os
from rest_framework.authentication import TokenAuthentication,BasicAuthentication,SessionAuthentication

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=tzzp91o*@aqpwkfnah$&a!nlwk$@=r@u+f5r1ib4v%hyvv*5u'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]
# CORS_ORIGIN_WHITELIST = ('*')
CORS_ORIGIN_WHITLIST = (
    'http://127.0.0.1:8081',
    'http://localhost'
)
CORS_ALLOW_METHODS = ( 'DELETE',  'GET',  'OPTIONS',  'PATCH',  'POST',  'PUT',  'VIEW', )
CORS_ALLOW_CREDENTIALS = True
# Application definition
CORS_ORIGIN_ALLOW_ALL = True
# Origin '*' in CORS_ORIGIN_WHITELIST is missing scheme 出现该错误则将其注释掉
CORS_ALLOW_HEADERS = (
  'XMLHttpRequest',
  'X_FILENAME',
  'accept-encoding',
  'authorization',
  'content-type',
  'dnt',
  'origin',
  'user-agent',
  'x-csrftoken',
  'x-requested-with',
  'Pragma',
)

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "corsheaders",
    "api.apps.ApiConfig",
    "algorithm.apps.AlgorithmConfig",
    "rest_framework",
    'rest_framework.authtoken',
    "django_filters",
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'app.urls'
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'
AUTH_USER_MODEL = 'api.User'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        # 数据库名（需要提前创建）
        'NAME': 'my_doccano_2',
        # 用户名
        'USER': 'root',
        # 密码
        'PASSWORD': 'mysql',
        # url 服务器地址
        'HOST': '127.0.0.1',
        # 端口号
        'PORT': 3306,
    }
}
CACHES = {
    "default": {
            "BACKEND": "django_redis.cache.RedisCache",
            "LOCATION": "redis://127.0.0.1:6379/0",
            "OPTIONS": {
                "CLIENT_CLASS": "django_redis.client.DefaultClient",
            }
        },
    "history": {
            "BACKEND": "django_redis.cache.RedisCache",
            "LOCATION": "redis://127.0.0.1:6379/2",
            "OPTIONS": {
                "CLIENT_CLASS": "django_redis.client.DefaultClient",
            }
        },
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# VALID_URL_LIST = [
#     "^/login/$",
#     "^index/$",
#     "^/admin.*",
# ]
# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'app.utils.pagination.StandardResultsSetPagination',
    "DEFAULT_FILTER_BACKENDS": ("django_filters.rest_framework.DjangoFilterBackend",),
    'EXCEPTION_HANDLER': 'app.utils.exception_had.custom_exception_handler',
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    )
}
JWT_AUTH = {
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=1),  # 有效期
    'JWT_RESPONSE_PAYLOAD_HANDLER': 'app.utils.jwt_handler.jwt_response_payload_handler',
    # 'JWT_AUTH_HEADER_PREFIX': 'JWT '
}
# AUTHENTICATION_BACKENDS = ('django.contrib.auth.backends.ModelBackend',)

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

# USE_TZ = True
USE_TZ = False


LANGUAGE_CODE = 'zh-hans'
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'common_static'),
)
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'static')

MEDIA_ROOT=os.path.join(BASE_DIR,'common_static/images')
MEDIA_URL = "/static/images/"
ALGORITHM_ROOT = os.path.join(MEDIA_ROOT,"algorithm")
CONFIG_ROOT = os.path.join(MEDIA_ROOT,"configs")
MODEL_ROOT = os.path.join(MEDIA_ROOT,"models")

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.163.com'
EMAIL_PORT = 465
# EMAIL_USER_TLS = True

# EMAIL_SUBJECT_PREFIX = u'[Sercheif]'

# EMIAL_USE_TLS = False
#发送邮件的邮箱
EMAIL_HOST_USER = 'wzc18220844786@163.com'
#在邮箱中设置的客户端授权密码
EMAIL_HOST_PASSWORD = '123456789abc'
#收件人看到的发件人
EMAIL_FROM = 'wzc18220844786@163.com'